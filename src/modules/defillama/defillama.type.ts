export interface DefillamaTvlProtocol {
  id: string;
  name: string;
  address: null | string;
  symbol: string;
  url: string;
  referralUrl?: string;
  description: null | string;
  chain: string;
  logo: string;
  audits: null | string;
  audit_note?: null | string;
  gecko_id: null | string;
  cmcId: null | string;
  category: Category;
  chains: string[];
  module: string;
  twitter?: null | string;
  audit_links?: string[];
  oracles?: string[];
  slug: string;
  tvl: number;
  // chainTvls: { [key: string]: number };
  change_1h: number | null;
  change_1d: number | null;
  change_7d: number | null;
  fdv?: number;
  mcap?: number;
  openSource?: boolean;
  language?: string;
  staking?: number;
  parentProtocol?: string;
  pool2?: number;
  forkedFrom?: string[];
  listedAt?: number;

  chainTvls: {
    [key: string]: {
      tvl: {
        date: number;
        totalLiquidityUSD: number;
      }[];
      tokens: null;
      tokensInUsd: null;
    };
  };
  tokens: null;
  tokensInUsd: null;
  tvls: {
    date: number;
    totalLiquidityUSD: number;
  }[];
  isParentProtocol: boolean;
  raises: {
    date: number;
    name: string;
    round: null | string;
    amount: number;
    chains: string[];
    sector: string;
    leadInvestors: string[];
    otherInvestors: any[];
    valuation: null;
    defillamaId: number;
    source?: string;
  }[];
  otherProtocols: string[];
  hallmarks: Array<Array<number | string>>;
}

enum Category {
  AlgoStables = 'Algo-Stables',
  Bridge = 'Bridge',
  CDP = 'CDP',
  Chain = 'Chain',
  CrossChain = 'Cross Chain',
  Derivatives = 'Derivatives',
  Dexes = 'Dexes',
  Farm = 'Farm',
  Gaming = 'Gaming',
  Indexes = 'Indexes',
  Insurance = 'Insurance',
  Launchpad = 'Launchpad',
  Lending = 'Lending',
  LiquidStaking = 'Liquid Staking',
  NFTLending = 'NFT Lending',
  NFTMarketplace = 'NFT Marketplace',
  Options = 'Options',
  Oracle = 'Oracle',
  Payments = 'Payments',
  PredictionMarket = 'Prediction Market',
  Privacy = 'Privacy',
  ReserveCurrency = 'Reserve Currency',
  Rwa = 'RWA',
  Services = 'Services',
  Staking = 'Staking',
  Synthetics = 'Synthetics',
  UndercollateralizedLending = 'Undercollateralized Lending',
  Yield = 'Yield',
  YieldAggregator = 'Yield Aggregator',
}

export interface DefillamaTvlChart {
  date: string;
  totalLiquidityUSD: number;
}

// Generated by https://quicktype.io

export interface DefillamaTvlChain {
  gecko_id: null | string;
  tvl: number;
  tokenSymbol: null | string;
  cmcId: null | string;
  name: string;
  chainId: number | null | string;
}

export interface DefillamaStableCoin {
  id: string;
  name: string;
  symbol: string;
  gecko_id: string;
  pegType: PegType;
  priceSource: PriceSource | null;
  pegMechanism: PegMechanism;
  circulating: Circulating;
  circulatingPrevDay: Circulating;
  circulatingPrevWeek: Circulating | number;
  circulatingPrevMonth: Circulating | number;
  chainCirculating: ChainCirculating;
  chains: string[];
  price: number | null;
}

export interface ChainCirculating {
  Optimism?: Optimism;
  Statemine?: PuneHedgehog;
  Harmony?: PuneHedgehog;
  BSC?: PuneHedgehog;
  Dogechain?: PuneHedgehog;
  Astar?: PuneHedgehog;
  Oasis?: PuneHedgehog;
  Heco?: PuneHedgehog;
  Shiden?: PuneHedgehog;
  Telos?: PuneHedgehog;
  Arbitrum?: Arbitrum;
  Tron?: PuneHedgehog;
  TomoChain?: PuneHedgehog;
  zkSync?: Algorand;
  Zilliqa?: PuneHedgehog;
  Evmos?: PuneHedgehog;
  'Arbitrum Nova'?: PuneHedgehog;
  Milkomeda?: PuneHedgehog;
  SXnetwork?: PuneHedgehog;
  Aptos?: Aptos;
  RSK?: PuneHedgehog;
  Tezos?: Algorand;
  Moonbeam?: PuneHedgehog;
  Aurora?: Algorand;
  Loopring?: Loopring;
  Algorand?: Algorand;
  Polygon?: Ethereum;
  DefiChain?: PuneHedgehog;
  Canto?: PuneHedgehog;
  Metis?: PuneHedgehog;
  Wanchain?: PuneHedgehog;
  Kava?: Kava;
  Ontology?: PuneHedgehog;
  Moonriver?: PuneHedgehog;
  Liquidchain?: PuneHedgehog;
  Avalanche?: Avalanche;
  Klaytn?: PuneHedgehog;
  Meter?: PuneHedgehog;
  REINetwork?: PuneHedgehog;
  IoTeX?: PuneHedgehog;
  Ethereum?: Ethereum;
  Gnosis?: Arbitrum;
  EthereumClassic?: PuneHedgehog;
  Omni?: Algorand;
  Celo?: Algorand;
  Fuse?: Algorand;
  Fantom?: Algorand;
  OKExChain?: PuneHedgehog;
  Kardia?: PuneHedgehog;
  'Terra Classic'?: PuneHedgehog;
  KCC?: PuneHedgehog;
  Near?: PuneHedgehog;
  EOS?: PuneHedgehog;
  Crab?: PuneHedgehog;
  Bittorrent?: PuneHedgehog;
  Boba?: PuneHedgehog;
  Theta?: PuneHedgehog;
  NEO?: PuneHedgehog;
  Syscoin?: PuneHedgehog;
  Solana?: Algorand;
  Everscale?: Algorand;
  DFK?: PuneHedgehog;
  Kadena?: PuneHedgehog;
  Flow?: PuneHedgehog;
  Hedera?: PuneHedgehog;
  Stellar?: PuneHedgehog;
  Karura?: PuneHedgehog;
  Osmosis?: PuneHedgehog;
  Elastos?: PuneHedgehog;
  Ronin?: PuneHedgehog;
  Elrond?: PuneHedgehog;
  ThunderCore?: PuneHedgehog;
  Velas?: PuneHedgehog;
  StarkNet?: PuneHedgehog;
  Aztec?: PuneHedgehog;
  Waves?: PuneHedgehog;
  smartBCH?: PuneHedgehog;
  Cronos?: PuneHedgehog;
  Acala?: PuneHedgehog;
  Ergo?: PuneHedgehog;
  Mixin?: PuneHedgehog;
  Kujira?: PuneHedgehog;
  EthereumPoW?: Aptos;
}

export interface PuneHedgehog {
  current: PurpleCirculatingPrevDay;
  circulatingPrevDay: PurpleCirculatingPrevDay;
  circulatingPrevWeek: PurpleCirculatingPrevDay;
  circulatingPrevMonth: PurpleCirculatingPrevDay;
}

export interface PurpleCirculatingPrevDay {
  peggedUSD: number;
}

export interface Algorand {
  current: FluffyCirculatingPrevDay;
  circulatingPrevDay: FluffyCirculatingPrevDay;
  circulatingPrevWeek: FluffyCirculatingPrevDay;
  circulatingPrevMonth: FluffyCirculatingPrevDay;
}

export interface FluffyCirculatingPrevDay {
  peggedUSD?: number;
  peggedEUR?: number;
}

export interface Aptos {
  current: PurpleCirculatingPrevDay;
  circulatingPrevDay: PurpleCirculatingPrevDay;
  circulatingPrevWeek: PurpleCirculatingPrevDay;
  circulatingPrevMonth: number;
}

export interface Arbitrum {
  current: Circulating;
  circulatingPrevDay: Circulating;
  circulatingPrevWeek: Circulating;
  circulatingPrevMonth: Circulating;
}

export interface Circulating {
  peggedUSD?: number;
  peggedVAR?: number;
  peggedEUR?: number;
}

export interface Avalanche {
  current: TentacledCirculatingPrevDay;
  circulatingPrevDay: TentacledCirculatingPrevDay;
  circulatingPrevWeek: TentacledCirculatingPrevDay;
  circulatingPrevMonth: TentacledCirculatingPrevDay | number;
}

export interface TentacledCirculatingPrevDay {
  peggedUSD?: number;
  peggedVAR?: number;
}

export interface Ethereum {
  current: Circulating;
  circulatingPrevDay: Circulating;
  circulatingPrevWeek: Circulating | number;
  circulatingPrevMonth: Circulating | number;
}

export interface Kava {
  current: PurpleCirculatingPrevDay;
  circulatingPrevDay: PurpleCirculatingPrevDay;
  circulatingPrevWeek: PurpleCirculatingPrevDay;
  circulatingPrevMonth: PurpleCirculatingPrevDay | number;
}

export interface Loopring {
  current: TentacledCirculatingPrevDay;
  circulatingPrevDay: TentacledCirculatingPrevDay;
  circulatingPrevWeek: TentacledCirculatingPrevDay;
  circulatingPrevMonth: TentacledCirculatingPrevDay;
}

export interface Optimism {
  current: Circulating;
  circulatingPrevDay: Circulating;
  circulatingPrevWeek: Circulating;
  circulatingPrevMonth: Circulating | number;
}

export enum PegMechanism {
  Algorithmic = 'algorithmic',
  CryptoBacked = 'crypto-backed',
  FiatBacked = 'fiat-backed',
}

export enum PegType {
  PeggedEUR = 'peggedEUR',
  PeggedUSD = 'peggedUSD',
  PeggedVAR = 'peggedVAR',
}

export enum PriceSource {
  Birdeye = 'birdeye',
  Chainlink = 'chainlink',
  Coingecko = 'coingecko',
  Curve = 'curve',
  Defillama = 'defillama',
  Dexscreener = 'dexscreener',
  Kaddex = 'kaddex',
  Kucoin = 'kucoin',
}
// Generated by https://quicktype.io

export interface DefillamaStableCoinPrice {
  date: number;
  prices: { [key: string]: number | null };
}
// Generated by https://quicktype.io

export interface DefillamaStablecoinChain {
  gecko_id: null | string;
  totalCirculatingUSD: TotalCirculatingUSD;
  tokenSymbol: null | string;
  name: string;
}

export interface TotalCirculatingUSD {
  peggedUSD: number;
  peggedEUR?: number;
  peggedVAR?: number;
}
// Generated by https://quicktype.io

export interface DefillamaStableCoinChart {
  date: string;
  totalCirculating: Total;
  totalUnreleased: Total;
  totalCirculatingUSD: Total;
  totalMintedUSD: Total;
  totalBridgedToUSD: Total;
}

export interface Total {
  peggedUSD: number;
}

// export interface DefillamaTvlProtocolDetail {}
